data<-read.csv("C:/Temp/final data.csv")
head(data)
data<-read.csv("C:/Temp/real_final data.csv")
data<-read.csv("C:/Temp/real_final_data.csv")
head(data)
names(data)<-c("GU","Date","Week","call","temp","rain","wind","temp_dif","dust","dust_s","mean","call")
str(data)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num, data=data2)
library(mgcv)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num, data=data2)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num, data=data)
data["Week_to_num"] <- lapply(data2["Week"], as.numeric)
data["Week_to_num"] <- lapply(data["Week"], as.numeric)
data["gu_to_num"] <- lapply(data["loc_gu"], as.numeric)
data["date_to_num"]<-lapply(data["date"], as.numeric)
data["date_to_num"]<-lapply(data["Date"], as.numeric)
data["gu_to_num"] <- lapply(data["GU"], as.numeric)
head(data)
str(data)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=data)
summary(g)
plot(g)
plot(g)
smp_size <- floor(0.7 * nrow(data))
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- mtcars[train_ind, ]
test <- mtcars[-train_ind, ]
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train)
train.head()
head(train)
train <- data[train_ind, ]
test <- data[-train_ind, ]
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train)
summary(g)
g.pred<-predict(g,test)
g.pred
names(data)<-c("GU","Date","Week","call","temp","rain","wind","temp_dif","dust","dust_s","mean","call_num")
data["Week_to_num"] <- lapply(data["Week"], as.numeric)
data["date_to_num"]<-lapply(data["Date"], as.numeric)
data["gu_to_num"] <- lapply(data["GU"], as.numeric)
## set the seed to make your partition reproducible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train)
g.pred<-predict(g,test)
table(g.pred,test$call)
truecall<-test$call
mean((g.pred-truecall)^2)
library(randomForest)
library(tree)
eval1<-read.table('c:/Temp/Eval.txt',
header=F,
dec='.',
col.names=c('season','size','speed','mxPH','mnO2','Cl','NO3',
'NH4','oPO4','PO4','Chla'),
na.strings=c('XXXXXXX'))
sol1<-read.table("c:/Temp/Sols.txt")
algae <- read.table('c:/Temp/Analysis.txt',
header=F,
dec='.',
col.names=c('season','size','speed','mxPH','mnO2','Cl','NO3',
'NH4','oPO4','PO4','Chla','a1','a2','a3','a4','a5','a6','a7'),
na.strings=c('XXXXXXX'))
algae <- algae[-c(62,199),]
clean.algae <- algae
library(cluster)
dist.mtx <- as.matrix(daisy(algae[,1:11],stand=T))
central.value <- function(x) {
if (is.numeric(x)) median(x,na.rm=T)
else if (is.factor(x)) levels(x)[which.max(table(x))]
else {
f <- as.factor(x)
levels(f)[which.max(table(f))]
}
}
for(r in which(!complete.cases(algae))) clean.algae[r,which(is.na(algae[r,]))] <- apply(data.frame(algae[c(as.integer(names(sort(dist.mtx[r,])[2:11]))), which(is.na(algae[r,]))]), 2,central.value)
lm.a1 <- lm(a1 ~ .,data=clean.algae[,1:12])
final.lm <- step(lm.a1)
lm1.pred<-predict(final.lm,clean.algae)
plot(algae$a1,lm1.pred)
abline(0,1,col=2)
tr1.cv<-cv.tree(tr1)
for (i in 2:100){
tr1.cv$dev<-tr1.cv$dev+cv.tree(tr1)$dev
}
tr1.cv$dev<-tr1.cv$dev/100
plot(tr1.cv)  #find the best size
final.tr<-prune.tree(tr1,best=4)
plot(final.tr);text(final.tr)
tr1.cv<-cv.tree(tr1)
mean((final.lm.pred-clean.algae$a1)^2)
eval1<-read.table('c:/Temp/Eval.txt',
header=F,
dec='.',
col.names=c('season','size','speed','mxPH','mnO2','Cl','NO3',
'NH4','oPO4','PO4','Chla'),
na.strings=c('XXXXXXX'))
sol1<-read.table("c:/Temp/Sols.txt")
algae <- read.table('c:/Temp/Analysis.txt',
header=F,
dec='.',
col.names=c('season','size','speed','mxPH','mnO2','Cl','NO3',
'NH4','oPO4','PO4','Chla','a1','a2','a3','a4','a5','a6','a7'),
na.strings=c('XXXXXXX'))
algae <- algae[-c(62,199),]
clean.algae <- algae
library(cluster)
dist.mtx <- as.matrix(daisy(algae[,1:11],stand=T))
central.value <- function(x) {
if (is.numeric(x)) median(x,na.rm=T)
else if (is.factor(x)) levels(x)[which.max(table(x))]
else {
f <- as.factor(x)
levels(f)[which.max(table(f))]
}
}
for(r in which(!complete.cases(algae))) clean.algae[r,which(is.na(algae[r,]))] <- apply(data.frame(algae[c(as.integer(names(sort(dist.mtx[r,])[2:11]))), which(is.na(algae[r,]))]), 2,central.value)
lm.a1 <- lm(a1 ~ .,data=clean.algae[,1:12])
final.lm <- step(lm.a1)
lm1.pred<-predict(final.lm,clean.algae)
plot(algae$a1,lm1.pred)
abline(0,1,col=2)
tr1.cv<-cv.tree(tr1)
rf1<-randomForest(a1~.,data=clean.algae[,1:12])
library(randomForest)
library(tree)
install.packages("randomForest")
install.packages("tree")
install.packages("cv")
#install.packages("cv")
library(randomForest)
rf1<-randomForest(a1~.,data=clean.algae[,1:12])
final.rf.pred<-predict(rf1,clean.algae)
mean((final.rf.pred-clean.algae$a1)^2)
mean((final.tr.pred-clean.algae$a1)^2)
MSE(g.pred-truecall)
mean((g.pred-truecall)^2)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train, family = binomial,
method = "REML")
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train, family = binomial,method = "REML")
g<-gam(call_num~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week_to_num+gu_to_num+date_to_num, data=train, family = binomial,method = "REML")
g.pred<-predict(g,test)
truecall<-test$call_num
table(test$call_num,g.pred)
ifelse(g.pread>0.5,1,0)
ifelse(g.pred>0.5,1,0)
g.pred<-ifelse(g.pred>0.5,1,0)
truecall<-test$call_num
table(test$call_num,g.pred)
library(randomForest)
library(tree)
library(rpart)
tr1.cv<-cv.tree(tr1)
install.packages("MASS")
library(MASS)
tr1.cv<-cv.tree(tr1)
library(tree)
install.packages("tree")
install.packages("Randomforest")
install.packages("randomForest")
install.packages("tree")
출처: https://3months.tistory.com/383 [Deep Play]
install.packages("installr")
library(installr)
updateR()
install.packages("tree")
updateR()
install.packages("tree")
partialPlot(rf1,train,temp_dif)
#install.packages("randomForest")
#install.packages("tree")
#install.packages("lubridate")
#install.packages("caret")
#install.packages("gbm")
library(lubridate)
library(mgcv)
library(caret)
library(gbm)
library(MASS)
library(randomForest)
library(tree)
data<-read.csv("C:/Users/user/EWHA BIGDATA/FINAL_DATA.csv")
str(data)
data["time_trend"] <- lapply(data["Date"], as.numeric)
data["Date"] <- lapply(data["Date"], as.date)
data <- data[!(data$dust > 190 ), ]
head(data)
g<-gam(call~s(temp)+s(rain)+s(wind)+s(temp_dif)+s(dust)+Week+s(time_trend), data=data)
summary(g)
plot(g,ylim=c(-20,20),lags=TRUE)
################################################model#############################################################
smp_size <- floor(0.7 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
#randomforest
rf1<-randomForest(factor(call_num)~temp+rain+wind+temp_dif+dust+time_trend+gender+age+Week,data=train,ntree=500)
partialPlot(rf1,train,Week)
partialPlot(rf1,train,age)
partialPlot(rf1,train,temp)
partialPlot(rf1,train,temp_dif)
summary(rf1)
